<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/9/2017 3:22:27 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="STUKLW042A"
  DTS:CreatorName="SOCARTRADING\heti"
  DTS:DTSID="{492E37DE-6C0B-4D17-BBAE-169855ECBCC3}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1100.123"
  DTS:LocaleID="2057"
  DTS:ObjectName="ImportClipperData"
  DTS:PackageType="5"
  DTS:VersionBuild="142"
  DTS:VersionGUID="{1B4149FE-04BD-4876-AF4B-03A299B78443}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DMZ]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{4168D758-20F6-40AC-8833-29C1814CFE8D}"
      DTS:ObjectName="DMZ">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=LON-PC53;Initial Catalog=STG_Targo;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="2"
      DTS:Description="Build data from baseline, or daily update"
      DTS:DTSID="{5909583A-F967-494D-90B7-2A271B58120C}"
      DTS:ObjectName="baseline">
      <DTS:Property
        DTS:DataType="2"
        DTS:Name="ParameterValue">1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{7955B0BF-E279-4CC6-A40A-D146240C9241}"
      DTS:ObjectName="connectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=LON-PC53;Initial Catalog=STG_Targo;Integrated Security=SSPI;MultipleActiveResultSets=true</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C629658B-C95E-40C4-B740-20224D37BD5A}"
      DTS:ObjectName="pass">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">htindal887</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Path containing binarys to run"
      DTS:DTSID="{CA47043B-ED5A-4505-B01B-B53D59E77ED6}"
      DTS:ObjectName="PathToBin">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\temp\dlls</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="2"
      DTS:Description="Purge all data for refresh"
      DTS:DTSID="{E40E0A69-99AA-4F08-9133-248101F933E4}"
      DTS:ObjectName="purge">
      <DTS:Property
        DTS:DataType="2"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Which data feeds to download from Clipper"
      DTS:DTSID="{281022EE-4865-44AC-BFE5-433A7E2FEE1B}"
      DTS:ObjectName="types">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">global_crude</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="URL root. Parameters add in code. Do Not Change from package default unless Clipper instructs"
      DTS:DTSID="{AD1B2B53-4B2E-4238-B4CF-5BBE9474EAE9}"
      DTS:ObjectName="url">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">http://appserver.clipperdata.com:8080/ClipperDataAPI-2/rest/clipperapi/data/</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{1F7E6E68-FD20-4682-8836-64815A2D919C}"
      DTS:ObjectName="user">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">henry_tindal</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">2,7,OnError,12,OnTaskFailed</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{464D630C-702C-42B6-AFE0-1807E45D0807}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Clipper Data"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{5AD45F1D-3B27-40FB-8016-D78C51D02442}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Clipper Data"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_8bf74eda9ddc456eb7858a9bebbc834b"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Package::baseline,$Package::connectionString,$Package::pass,$Package::PathToBin,$Package::types,$Package::url,$Package::user">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.SqlTypes;
using System.IO;
using System.Reflection;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_8bf74eda9ddc456eb7858a9bebbc834b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>

        protected static string BinPath;
        public void Main()
		{
            // TODO: Add your code here
		    BinPath = Dts.Variables["PathToBin"].Value.ToString();
		    var targoDb = Dts.Variables["connectionString"].Value.ToString();
            var baseline = Convert.ToInt16(Dts.Variables["baseline"].Value);
		    var user = Dts.Variables["user"].Value.ToString();
            var pass = Dts.Variables["pass"].Value.ToString();
		    var types = Dts.Variables["types"].Value.ToString();
		    var url = Dts.Variables["url"].Value.ToString();

		    try
		    {
		        AppDomain.CurrentDomain.AssemblyResolve += CurrentDomain_AssemblyResolve;

		        Assembly dll = Assembly.LoadFile(Path.Combine(BinPath, "ImportData.Service.dll"));
		        Type myType = dll.GetType("ImportData.ClipperService.ClipperService");

		        myType.GetMethod("ImportData")
		            .Invoke(null, new object[] { url, targoDb, user, pass, types, baseline });
		    }
		    catch (Exception ex)
		    {
		        Dts.Events.FireError(0, "Import Clipper Data", ex.InnerException?.InnerException?.Message ?? ex.InnerException?.Message ?? ex.Message
		            , ex.InnerException?.InnerException?.StackTrace ?? ex.InnerException?.StackTrace ?? ex.StackTrace, 0);
		    }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

	    static Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
	    {
	        if (args.Name.Contains("ImportData.Clipper"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "ImportData.Clipper.dll"));
	        if (args.Name.Contains("Dapper.StrongName"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "Dapper.StrongName.dll"));
	        if (args.Name.Contains("FastMember.Signed"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "FastMember.Signed.dll"));
	        if (args.Name.Contains("Newtonsoft.Json"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "Newtonsoft.Json.dll"));
	        return null;
	    }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_8bf74eda9ddc456eb7858a9bebbc834b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D6DE4890-5CB8-4710-AC47-42012EDE6F40}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8bf74eda9ddc456eb7858a9bebbc834b</RootNamespace>
    <AssemblyName>ST_8bf74eda9ddc456eb7858a9bebbc834b</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_8bf74eda9ddc456eb7858a9bebbc834b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_8bf74eda9ddc456eb7858a9bebbc834b</msb:DisplayName>
    <msb:ProjectId>{F25959D5-4E0E-4ECD-B7FF-97D9FDD58A76}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_8bf74eda9ddc456eb7858a9bebbc834b.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Settings.get_Default():ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Sett" +
    "ings")]

namespace ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8bf74eda9ddc456eb7858a9bebbc834b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8bf74eda9ddc456eb7858a9bebbc834b")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_8bf74eda9ddc456eb7858a9bebbc834b.dll">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
BgADAEYEBgBLAa8ECgAaBcQDBgCWA0YEBgC1AEYEAAAAAAkAAAAAAAEAAQABABAAXgRDADkAAQAB
AAAAEAB/BdsFRQACAAQAAAEQABgG2wVlAAQACAADAQAAUAYAAE0ABQALABQAnQPAABEAUgTDABEA
OwHHABEAiQDLAAYGOwDPAFaAQAbSAFaAGwHSAFAgAAAAAIYAZAQGAAEAbCIAAAAAkQBcA9YAAQAW
IwAAAACGGDgFBgADAB4jAAAAAIMYOAUGAAMAJiMAAAAAkwjyBN4AAwBSIwAAAACTCCMB4wADAFkj
AAAAAJMILwHoAAMAYSMAAAAAlghwBu4ABABoIwAAAACGGDgFBgAEAHAjAAAAAJEYPgXzAAQAAAAB
AOsEAAACADIGAAABAEIDCQA4BQEAEQA4BQYAGQA4BQoAKQA4BRAAMQA4BRAAOQA4BRAAQQA4BRAA
SQA4BRAAUQA4BRAAWQA4BRAAYQA4BRAAaQA4BQYAoQA4BQYAwQA4BRUA0QA4BQYAcQBIBiYA2QAK
BisA4QA9BDAA6QA4AzYAiQCUAzoA8QABAD4A+QBzBEMAAQE4BUgA+QBIA04ACQELAVUAgQDZAFsA
gQATAWEAEQFwAGgAKQGlAG8A2QBeBnYAeQDBBHwAeQCZADoAeQB6ADoAMQEuBYEA2QB8BgEAkQDi
ADoAOQE3BooAcQA4BQYAiQA4BQYAEQHHAI8AEQGTBpgAqQA4BZ0AyQA4BQYACAAYALYACAAcALsA
KQBzAC4BLgALAAYBLgATAA8BLgAbAC4BLgAjADcBLgArAGABLgAzAGABLgA7AGABLgBDADcBLgBL
AGYBLgBTAGABLgBbAH0BQwBjALsASQBzAC4BYwBrALsAgQB7ALsAGwADAAEABAADAAAA9gT3AAAA
QwH8AAAAdAYBAQIABQADAAIABgAFAAEABwAFAAIACAAHAASAAAABAAAAYxvScgAAAAAAAEMAAAAE
AAAAAAAAAAAAAACkAGcAAAAAAA4AAAAAAAAAAAAAAK0ApQMAAAAABAAAAAAAAAAAAAAApABGBAAA
AAAOAAAAAAAAAAAAAACtABwAAAAAAAAAAAABAAAAiQUAAAUAAgAAAAAAAFRvSW50MTYAPE1vZHVs
ZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFNUXzhi
Zjc0ZWRhOWRkYzQ1NmViNzg1OGE5YmViYmM4MzRiAG1zY29ybGliAEdldE1ldGhvZABnZXRfU3Rh
Y2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UASW52b2tlAFZhcmlhYmxlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAExvYWRGaWxlAGdldF9OYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAQ29tYmluZQBHZXRUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAE1ldGhvZEJhc2UAVlNUQVJUU2NyaXB0T2Jq
ZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
RGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBv
aW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAYWRkX0Fzc2VtYmx5UmVzb2x2ZQBDdXJyZW50RG9t
YWluX0Fzc2VtYmx5UmVzb2x2ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAEJp
blBhdGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUXzhiZjc0ZWRhOWRkYzQ1NmViNzg1OGE5YmViYmM4MzRiLmRsbABnZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAEFwcERvbWFpbgBnZXRfQ3VycmVudERvbWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBnZXRfSW5uZXJFeGNlcHRpb24ATWV0aG9kSW5mbwBDdWx0dXJlSW5mbwBzZW5kZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgBSZXNvbHZlRXZlbnRIYW5kbGVyAEV2ZW50c09iamVjdFdyYXBwZXIA
RmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzhiZjc0ZWRhOWRkYzQ1NmViNzg1
OGE5YmViYmM4MzRiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTVF84YmY3NGVkYTlkZGM0NTZlYjc4NThhOWJlYmJjODM0Yi5Qcm9wZXJ0aWVzAGdldF9WYXJp
YWJsZXMAU2V0dGluZ3MAUmVzb2x2ZUV2ZW50QXJncwBhcmdzAENvbnRhaW5zAFN1Y2Nlc3MAZ2V0
X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVudHMAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNr
UmVzdWx0AENvbnZlcnQAZ2V0X0Fzc2VtYmx5AAATUABhAHQAaABUAG8AQgBpAG4AACFjAG8AbgBu
AGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAARYgBhAHMAZQBsAGkAbgBlAAAJdQBzAGUAcgAACXAA
YQBzAHMAAAt0AHkAcABlAHMAAAd1AHIAbAAALUkAbQBwAG8AcgB0AEQAYQB0AGEALgBTAGUAcgB2
AGkAYwBlAC4AZABsAGwAAFFJAG0AcABvAHIAdABEAGEAdABhAC4AQwBsAGkAcABwAGUAcgBTAGUA
cgB2AGkAYwBlAC4AQwBsAGkAcABwAGUAcgBTAGUAcgB2AGkAYwBlAAAVSQBtAHAAbwByAHQARABh
AHQAYQAAJ0kAbQBwAG8AcgB0ACAAQwBsAGkAcABwAGUAcgAgAEQAYQB0AGEAACVJAG0AcABvAHIA
dABEAGEAdABhAC4AQwBsAGkAcABwAGUAcgAALUkAbQBwAG8AcgB0AEQAYQB0AGEALgBDAGwAaQBw
AHAAZQByAC4AZABsAGwAACNEAGEAcABwAGUAcgAuAFMAdAByAG8AbgBnAE4AYQBtAGUAACtEAGEA
cABwAGUAcgAuAFMAdAByAG8AbgBnAE4AYQBtAGUALgBkAGwAbAAAI0YAYQBzAHQATQBlAG0AYgBl
AHIALgBTAGkAZwBuAGUAZAAAK0YAYQBzAHQATQBlAG0AYgBlAHIALgBTAGkAZwBuAGUAZAAuAGQA
bABsAAAfTgBlAHcAdABvAG4AcwBvAGYAdAAuAEoAcwBvAG4AACdOAGUAdwB0AG8AbgBzAG8AZgB0
AC4ASgBzAG8AbgAuAGQAbABsAABxUwBUAF8AOABiAGYANwA0AGUAZABhADkAZABkAGMANAA1ADYA
ZQBiADcAOAA1ADgAYQA5AGIAZQBiAGIAYwA4ADMANABiAC4AUAByAG8AcABlAHIAdABpAGUAcwAu
AFIAZQBzAG8AdQByAGMAZQBzAAAAAABbyPMdLH9SS5xQrgv4RMWvAAQgAQEIAyAAAQUgAQEREQQg
AQEOBSABARFdCgcHDgYODg4OEj0EIAASbQQgABJxBSABEnUcAyAAHAMgAA4EAAEGHAQAABJ9BSAC
ARwYBiABARKAgQUAAg4ODgUAARJBDgYgARKAiQ4GIAESgI0OBiACHBwdHAUgABKAmQQgABI9CCAF
AggODg4IBCABAg4IAAESgIkRgKEEIAASQQYgAgEOEkEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQB
AAAAAgYOAwYSVQMGElkDBhIQAgYIAwYRFAcAAhJBHBJJBAAAElUEAAASWQUAAQESWQQAABIQAwAA
AQQIABJVBAgAElkECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU1RfOGJmNzRlZGE5ZGRjNDU2ZWI3ODU4YTliZWJiYzgzNGIAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAxNwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjUAtAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAKA0AAAA
AAAAAAAAALo0AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsNAAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDScmMbAAABANJyYxs/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADgAYgBmADcANABlAGQAYQA5AGQAZABjADQANQA2AGUAYgA3ADgANQA4AGEAOQBiAGUA
YgBiAGMAOAAzADQAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADAAMQAxAC4AMgA5ADMAOQA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADgAYgBmADcANABlAGQAYQA5AGQAZABjADQANQA2AGUAYgA3ADgANQA4AGEAOQBiAGUAYgBi
AGMAOAAzADQAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AOABiAGYANwA0AGUAZABhADkAZABkAGMANAA1ADYAZQBiADcAOAA1ADgAYQA5
AGIAZQBiAGIAYwA4ADMANABiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADgAYgBmADcANABlAGQAYQA5AGQAZABjADQANQA2AGUAYgA3ADgANQA4AGEAOQBi
AGUAYgBiAGMAOAAzADQAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwAwADEAMQAuADIAOQAzADkANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwAwADEAMQAuADIAOQAzADkANAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADMNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Clipper Data After Truncate"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{46a26863-3853-46d1-9ca7-32631746aced}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Clipper Data After Truncate"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_0c04775a57814647acc130e77bc05744"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Package::baseline,$Package::connectionString,$Package::pass,$Package::PathToBin,$Package::types,$Package::url,$Package::user">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Settings.get_Default():ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Sett" +
    "ings")]

namespace ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_0c04775a57814647acc130e77bc05744.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D6DE4890-5CB8-4710-AC47-42012EDE6F40}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8bf74eda9ddc456eb7858a9bebbc834b</RootNamespace>
    <AssemblyName>ST_0c04775a57814647acc130e77bc05744</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.Data.SqlTypes;
using System.IO;
using System.Reflection;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_8bf74eda9ddc456eb7858a9bebbc834b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>

        protected static string BinPath;
        public void Main()
		{
            // TODO: Add your code here
		    BinPath = Dts.Variables["PathToBin"].Value.ToString();
		    var targoDb = Dts.Variables["connectionString"].Value.ToString();
            var baseline = Convert.ToInt16(Dts.Variables["baseline"].Value);
		    var user = Dts.Variables["user"].Value.ToString();
            var pass = Dts.Variables["pass"].Value.ToString();
		    var types = Dts.Variables["types"].Value.ToString();
		    var url = Dts.Variables["url"].Value.ToString();

		    try
		    {
		        AppDomain.CurrentDomain.AssemblyResolve += CurrentDomain_AssemblyResolve;

		        Assembly dll = Assembly.LoadFile(Path.Combine(BinPath, "ImportData.Service.dll"));
		        Type myType = dll.GetType("ImportData.ClipperService.ClipperService");

		        myType.GetMethod("ImportData")
		            .Invoke(null, new object[] { url, targoDb, user, pass, types, baseline });
		    }
		    catch (Exception ex)
		    {
		        Dts.Events.FireError(0, "Import Clipper Data", ex.InnerException?.InnerException?.Message ?? ex.InnerException?.Message ?? ex.Message
		            , ex.InnerException?.InnerException?.StackTrace ?? ex.InnerException?.StackTrace ?? ex.StackTrace, 0);
		    }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

	    static Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
	    {
	        if (args.Name.Contains("ImportData.Clipper"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "ImportData.Clipper.dll"));
	        if (args.Name.Contains("Dapper.StrongName"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "Dapper.StrongName.dll"));
	        if (args.Name.Contains("FastMember.Signed"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "FastMember.Signed.dll"));
	        if (args.Name.Contains("Newtonsoft.Json"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "Newtonsoft.Json.dll"));
	        return null;
	    }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_0c04775a57814647acc130e77bc05744</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_0c04775a57814647acc130e77bc05744</msb:DisplayName>
    <msb:ProjectId>{7534FF1C-F4A4-4B10-B9F6-FD6BBFE12479}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_0c04775a57814647acc130e77bc05744.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8bf74eda9ddc456eb7858a9bebbc834b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8bf74eda9ddc456eb7858a9bebbc834b")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8bf74eda9ddc456eb7858a9bebbc834b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_0c04775a57814647acc130e77bc05744.dll">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
BgAnAGoEBgBvAdMECgA+BegDBgC6A2oEBgDZAGoEAAAAAC0AAAAAAAEAAQABABAAggRnADkAAQAB
AAAAEACjBf8FRQACAAQAAAEQADwG/wVlAAQACAADAQAAdAYAAE0ABQALABQAwQPAABEAdgTDABEA
XwHHABEArQDLAAYGXwDPAFaAZAbSAFaAPwHSAFAgAAAAAIYAiAQGAAEAbCIAAAAAkQCAA9YAAQAW
IwAAAACGGFwFBgADAB4jAAAAAIMYXAUGAAMAJiMAAAAAkwgWBd4AAwBSIwAAAACTCEcB4wADAFkj
AAAAAJMIUwHoAAMAYSMAAAAAlgiUBu4ABABoIwAAAACGGFwFBgAEAHAjAAAAAJEYYgXzAAQAAAAB
AA8FAAACAFYGAAABAGYDCQBcBQEAEQBcBQYAGQBcBQoAKQBcBRAAMQBcBRAAOQBcBRAAQQBcBRAA
SQBcBRAAUQBcBRAAWQBcBRAAYQBcBRAAaQBcBQYAoQBcBQYAwQBcBRUA0QBcBQYAcQBsBiYA2QAu
BisA4QBhBDAA6QBcAzYAiQC4AzoA8QAlAD4A+QCXBEMAAQFcBUgA+QBsA04ACQEvAVUAgQD9AFsA
gQA3AWEAEQGUAGgAKQHJAG8A2QCCBnYAeQDlBHwAeQC9ADoAeQCeADoAMQFSBYEA2QCgBgEAkQAG
AToAOQFbBooAcQBcBQYAiQBcBQYAEQHrAI8AEQG3BpgAqQBcBZ0AyQBcBQYACAAYALYACAAcALsA
KQBzAC4BLgALAAYBLgATAA8BLgAbAC4BLgAjADcBLgArAGABLgAzAGABLgA7AGABLgBDADcBLgBL
AGYBLgBTAGABLgBbAH0BQwBjALsASQBzAC4BYwBrALsAgQB7ALsAGwADAAEABAADAAAAGgX3AAAA
ZwH8AAAAmAYBAQIABQADAAIABgAFAAEABwAFAAIACAAHAASAAAABAAAAYxsadAAAAAAAAAEAAAAE
AAAAAAAAAAAAAACkAIsAAAAAAA4AAAAAAAAAAAAAAK0AyQMAAAAABAAAAAAAAAAAAAAApABqBAAA
AAAOAAAAAAAAAAAAAACtAEAAAAAAAAAAAAABAAAArQUAAAUAAgAAAAAAAFNUXzBjMDQ3NzVhNTc4
MTQ2NDdhY2MxMzBlNzdiYzA1NzQ0AFRvSW50MTYAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFNUXzhiZjc0ZWRhOWRkYzQ1NmViNzg1OGE5
YmViYmM4MzRiAG1zY29ybGliAEdldE1ldGhvZABnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFu
Y2UAZ2V0X01lc3NhZ2UASW52b2tlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAExvYWRGaWxlAGdldF9OYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUAQ29tYmluZQBHZXRUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3Vy
Y2VDdWx0dXJlAE1ldGhvZEJhc2UAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0
aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUA
dmFsdWUAYWRkX0Fzc2VtYmx5UmVzb2x2ZQBDdXJyZW50RG9tYWluX0Fzc2VtYmx5UmVzb2x2ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAEJpblBhdGgATWljcm9zb2Z0LlNxbFNl
cnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sA
U2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzBjMDQ3NzVhNTc4MTQ2
NDdhY2MxMzBlNzdiYzA1NzQ0LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAEFwcERvbWFpbgBnZXRfQ3VycmVudERvbWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlv
bgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfSW5uZXJFeGNlcHRp
b24ATWV0aG9kSW5mbwBDdWx0dXJlSW5mbwBzZW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBSZXNv
bHZlRXZlbnRIYW5kbGVyAEV2ZW50c09iamVjdFdyYXBwZXIARmlyZUVycm9yAC5jdG9yAC5jY3Rv
cgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0
ZW0uUmVzb3VyY2VzAFNUXzhiZjc0ZWRhOWRkYzQ1NmViNzg1OGE5YmViYmM4MzRiLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF84YmY3NGVkYTlkZGM0NTZl
Yjc4NThhOWJlYmJjODM0Yi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAUmVzb2x2
ZUV2ZW50QXJncwBhcmdzAENvbnRhaW5zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdl
dF9FdmVudHMAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AENvbnZlcnQAZ2V0X0Fz
c2VtYmx5AAATUABhAHQAaABUAG8AQgBpAG4AACFjAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkA
bgBnAAARYgBhAHMAZQBsAGkAbgBlAAAJdQBzAGUAcgAACXAAYQBzAHMAAAt0AHkAcABlAHMAAAd1
AHIAbAAALUkAbQBwAG8AcgB0AEQAYQB0AGEALgBTAGUAcgB2AGkAYwBlAC4AZABsAGwAAFFJAG0A
cABvAHIAdABEAGEAdABhAC4AQwBsAGkAcABwAGUAcgBTAGUAcgB2AGkAYwBlAC4AQwBsAGkAcABw
AGUAcgBTAGUAcgB2AGkAYwBlAAAVSQBtAHAAbwByAHQARABhAHQAYQAAJ0kAbQBwAG8AcgB0ACAA
QwBsAGkAcABwAGUAcgAgAEQAYQB0AGEAACVJAG0AcABvAHIAdABEAGEAdABhAC4AQwBsAGkAcABw
AGUAcgAALUkAbQBwAG8AcgB0AEQAYQB0AGEALgBDAGwAaQBwAHAAZQByAC4AZABsAGwAACNEAGEA
cABwAGUAcgAuAFMAdAByAG8AbgBnAE4AYQBtAGUAACtEAGEAcABwAGUAcgAuAFMAdAByAG8AbgBn
AE4AYQBtAGUALgBkAGwAbAAAI0YAYQBzAHQATQBlAG0AYgBlAHIALgBTAGkAZwBuAGUAZAAAK0YA
YQBzAHQATQBlAG0AYgBlAHIALgBTAGkAZwBuAGUAZAAuAGQAbABsAAAfTgBlAHcAdABvAG4AcwBv
AGYAdAAuAEoAcwBvAG4AACdOAGUAdwB0AG8AbgBzAG8AZgB0AC4ASgBzAG8AbgAuAGQAbABsAABx
UwBUAF8AOABiAGYANwA0AGUAZABhADkAZABkAGMANAA1ADYAZQBiADcAOAA1ADgAYQA5AGIAZQBi
AGIAYwA4ADMANABiAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA
AAAgxV0dby9xTbvPJ9MxUXmyAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdCgcHDgYODg4OEj0E
IAASbQQgABJxBSABEnUcAyAAHAMgAA4EAAEGHAQAABJ9BSACARwYBiABARKAgQUAAg4ODgUAARJB
DgYgARKAiQ4GIAESgI0OBiACHBwdHAUgABKAmQQgABI9CCAFAggODg4IBCABAg4IAAESgIkRgKEE
IAASQQYgAgEOEkEIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAgYOAwYSVQMGElkDBhIQAgYI
AwYRFAcAAhJBHBJJBAAAElUEAAASWQUAAQESWQQAABIQAwAAAQQIABJVBAgAElkECAASEAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOGJmNzRl
ZGE5ZGRjNDU2ZWI3ODU4YTliZWJiYzgzNGIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNwAA
SQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC41AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIu
TkVUIEZyYW1ld29yayA0LjUAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAMQ0AAAAAAAAAAAAAN40AAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAADQNAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAadGMbAAABABp0Yxs/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADgAYgBmADcANABlAGQAYQA5AGQAZABjADQANQA2AGUAYgA3ADgANQA4AGEAOQBiAGUA
YgBiAGMAOAAzADQAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADAAMQAxAC4AMgA5ADcAMgAyAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADAAYwAwADQANwA3ADUAYQA1ADcAOAAxADQANgA0ADcAYQBjAGMAMQAzADAAZQA3ADcAYgBj
ADAANQA3ADQANAAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AMABjADAANAA3ADcANQBhADUANwA4ADEANAA2ADQANwBhAGMAYwAxADMAMABl
ADcANwBiAGMAMAA1ADcANAA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADgAYgBmADcANABlAGQAYQA5AGQAZABjADQANQA2AGUAYgA3ADgANQA4AGEAOQBi
AGUAYgBiAGMAOAAzADQAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwAwADEAMQAuADIAOQA3ADIAMgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwAwADEAMQAuADIAOQA3ADIAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADwNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B6C55A21-AFC3-4828-AAF7-28B050E031F7}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Table"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{4168D758-20F6-40AC-8833-29C1814CFE8D}"
          SQLTask:SqlStatementSource="Truncate Table dbo.ClipperStaging" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{F9A7798F-8934-41C1-ACF4-2421ACA679DA}"
      DTS:EvalOp="3"
      DTS:Expression="@[$Package::purge] == 1"
      DTS:From="Package\Data Flow Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Truncate Table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{72AA7FC2-27B3-47A3-9756-B44ACE57F105}"
      DTS:EvalOp="3"
      DTS:Expression="@[$Package::purge] == 0"
      DTS:From="Package\Data Flow Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Import Clipper Data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{E94DFB0E-6C6F-4AD2-9BF0-9CEF418C3CF4}"
      DTS:From="Package\Truncate Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Import Clipper Data After Truncate" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="153,42"
          Id="Package\Data Flow Task"
          TopLeft="134,18" />
        <NodeLayout
          Size="174,42"
          Id="Package\Import Clipper Data"
          TopLeft="401,145" />
        <NodeLayout
          Size="245,42"
          Id="Package\Import Clipper Data After Truncate"
          TopLeft="100,238" />
        <NodeLayout
          Size="152,42"
          Id="Package\Truncate Table"
          TopLeft="118,148" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="190.166666666667,60">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,88"
              Start="0,0"
              End="0,80.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,32.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="234.666666666667,60">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="253.333333333333,85"
              Start="0,0"
              End="253.333333333333,77.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5278137128072" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.5278137128072"
                    Point2="0,34.5278137128072"
                    Point3="4,34.5278137128072" />
                  <mssgle:LineSegment
                    End="249.333333333333,34.5278137128072" />
                  <mssgle:CubicBezierSegment
                    Point1="249.333333333333,34.5278137128072"
                    Point2="253.333333333333,34.5278137128072"
                    Point3="253.333333333333,38.5278137128072" />
                  <mssgle:LineSegment
                    End="253.333333333333,77.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="118.666666666667,39.5278137128072,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="194,190">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28.5,48"
              Start="0,0"
              End="28.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="24.5,24" />
                  <mssgle:CubicBezierSegment
                    Point1="24.5,24"
                    Point2="28.5,24"
                    Point3="28.5,28" />
                  <mssgle:LineSegment
                    End="28.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>