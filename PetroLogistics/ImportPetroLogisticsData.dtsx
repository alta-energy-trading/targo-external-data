<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/27/2018 2:14:01 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="STUKLW042A"
  DTS:CreatorName="SOCARTRADING\heti"
  DTS:DTSID="{3A9331DB-D872-4ABB-ADBD-944B13FC1357}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1100.123"
  DTS:LocaleID="2057"
  DTS:ObjectName="ImportPetroLogisticsData"
  DTS:PackageType="5"
  DTS:VersionBuild="29"
  DTS:VersionGUID="{95A70303-64F8-4701-A3B9-6E47F6AD4A0A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DMZ]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{F3D02183-6ACA-4FF4-9C92-25DB4A603633}"
      DTS:ObjectName="DMZ">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=LON-PC53;Initial Catalog=STG_Targo;Integrated Security=True;Application Name=SSIS-Import-{F3D02183-6ACA-4FF4-9C92-25DB4A603633}STCHGS112.STG_Targo1;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{BD34D2C0-2E11-4E48-8887-6A4EECB2228B}"
      DTS:ObjectName="ConnectionString"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=Lon-PC53;Initial Catalog=STG_Targo;Integrated Security=SSPI;MultipleActiveResultSets=true</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{7B47A2F7-523A-444A-9692-AB4AF1BF8A06}"
      DTS:ObjectName="Domain">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">https://secure.petro-logistics.com</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{AF64414B-2D80-411E-8F0F-CA8EE5C7AAB8}"
      DTS:ObjectName="Hash">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">vqDLzZiQwuKx4m7eplhguyEBZ0jMq70mDOhFG1cLQkl9xqfiPN1Fe9vBgkL8hntx</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D7158D32-3CDF-41AA-B0AE-90A5DBD3B789}"
      DTS:ObjectName="Key">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">iaut20xif17ly51xc5330n67</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{06681E0A-FFA6-43B2-8CD9-90686E61D516}"
      DTS:ObjectName="Pass">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Y67jAi3UOoKWIJF781pXXz7IKC69r7Wx</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4E8265AD-343A-428A-B3A3-EBB287C470F6}"
      DTS:ObjectName="Path">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">/api/v2/movementsdata.php</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E2D92F5E-59CA-4211-9047-29EA99242E94}"
      DTS:ObjectName="PathToBin">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">C:\temp\dlls</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="2"
      DTS:DTSID="{F1DBA838-FEC2-4AA1-92B3-423D3E2F2260}"
      DTS:ObjectName="Purge">
      <DTS:Property
        DTS:DataType="2"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3B077269-A3B0-4DE1-91B1-ED1CD0B987A0}"
      DTS:ObjectName="Query">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">FSU_CO_2019_P31|FSU_CN_2019_P31|Saudi_CO_2019_Present|Iran_CO_2019_Present|Iran_CN_2019_Present|Iraq_CO_2019_Present|Kuwait_CO_2019_Present|Qatar_CO_2019_Present|Qatar_CN_2019_Present|UAE_CO_2019_Present|Oman_CO_2019_Present|</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{E1C05E80-C3C6-454F-AFD6-A273CF14EE24}"
      DTS:ObjectName="User">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">garym_http_A0gtFsUMb234</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{ACA8973A-69B3-4870-9585-55137CB4D3B5}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Records"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{666C6C06-B96A-47BC-B17B-1DB34CC8A650}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Records"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a49291b310c849d5ba09f0cd87e3852a"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Package::ConnectionString,$Package::Domain,$Package::Hash,$Package::Key,$Package::Pass,$Package::Path,$Package::PathToBin,$Package::Query,$Package::User">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Settings.get_Default():ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Sett" +
    "ings")]

namespace ST_a49291b310c849d5ba09f0cd87e3852a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_a49291b310c849d5ba09f0cd87e3852a.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{843394AE-4040-437B-826E-F13FD27727B7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a49291b310c849d5ba09f0cd87e3852a</RootNamespace>
    <AssemblyName>ST_a49291b310c849d5ba09f0cd87e3852a</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Reflection;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_a49291b310c849d5ba09f0cd87e3852a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
	    protected static string BinPath;
	    public void Main()
	    {
	        // TODO: Add your code here
	        BinPath = Dts.Variables["PathToBin"].Value.ToString();
	        var connection = Dts.Variables["ConnectionString"].Value.ToString();
	        var user = Dts.Variables["User"].Value.ToString();
	        var pass = Dts.Variables["Pass"].Value.ToString();
	        var key = Dts.Variables["Key"].Value.ToString();
	        var hash = Dts.Variables["Hash"].Value.ToString();
            var path = Dts.Variables["Path"].Value.ToString();
	        var query = Dts.Variables["Query"].Value.ToString();
	        var domain = Dts.Variables["Domain"].Value.ToString();

            try
	        {
	            AppDomain.CurrentDomain.AssemblyResolve += CurrentDomain_AssemblyResolve;

	            Assembly dll = Assembly.LoadFile(Path.Combine(BinPath, "ImportData.PetroLogisticsService.dll"));
	            Type myType = dll.GetType("ImportData.PetroLogisticsService.PetroLogisticsService");

	            myType.GetMethod("ImportData")
	                .Invoke(null, new object[] { connection, user, pass, key, hash, domain, path, query });
	        }
	        catch (Exception ex)
	        {
	            Dts.Events.FireError(0, "Import Petro Logistics Movements", ex.InnerException?.InnerException?.Message ?? ex.InnerException?.Message ?? ex.Message
	                , ex.InnerException?.InnerException?.StackTrace ?? ex.InnerException?.StackTrace ?? ex.StackTrace, 0);
	        }

	        Dts.TaskResult = (int)ScriptResults.Success;
	    }

	    static Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
	    {
	        if (args.Name.Contains("ImportData.PetroLogistics"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "ImportData.PetroLogistics.dll"));
	        if (args.Name.Contains("FastMember.Signed"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "FastMember.Signed.dll"));
	        if (args.Name.Contains("Newtonsoft.Json"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "Newtonsoft.Json.dll"));
	        return null;
	    }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_a49291b310c849d5ba09f0cd87e3852a</msb:CodeName>
		<msb:DisplayName>ST_a49291b310c849d5ba09f0cd87e3852a</msb:DisplayName>
		<msb:ProjectId>{504AD5FF-9870-4BD5-AC66-26F9D9642F76}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a49291b310c849d5ba09f0cd87e3852a.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a49291b310c849d5ba09f0cd87e3852a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a49291b310c849d5ba09f0cd87e3852a")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a49291b310c849d5ba09f0cd87e3852a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a49291b310c849d5ba09f0cd87e3852a.dll">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
BgBhBD4EBgD+BD4EBgCYAwoABgAOAT4EBgDMBKcEBgBDAacECgASBbwDBgCOAz4EBgCtAD4EAAAA
AAEAAAAAAAEAAQABABAAVgQ7ADkAAQABAAAAEAB3BdMFRQACAAQAAAEQABAG0wVlAAQACAADAQAA
SAYAAE0ABQALABQAlQO8ABEASgS/ABEAMwHDABEAgQDHAAYGMwDLAFaAOAbOAFaAEwHOAFAgAAAA
AIYAXAQGAAEAtCIAAAAAkQBUA9IAAQA3IwAAAACGGDAFBgADAD8jAAAAAIMYMAUGAAMARyMAAAAA
kwjqBNoAAwBzIwAAAACTCBsB3wADAHojAAAAAJMIJwHkAAMAgiMAAAAAlghoBuoABACJIwAAAACG
GDAFBgAEAJEjAAAAAJEYNgXvAAQAAAABAOMEAAACACoGAAABADoDCQAwBQEAEQAwBQYAGQAwBQoA
KQAwBRAAMQAwBRAAOQAwBRAAQQAwBRAASQAwBRAAUQAwBRAAWQAwBRAAYQAwBRAAaQAwBQYAoQAw
BQYAwQAwBRUA0QAwBQYAcQBABigA2QACBi0A4QA1BDIA6QAwAzgAiQCMAzwA8QBrBEAA+QAwBUUA
8QBAA0sAAQEDAVEAgQDRAFcAgQALAV0ACQFoAGQAGQGdAGsA2QBWBnIAeQC5BHgAeQCRADwAeQBy
ADwAIQEmBX0A2QB0BgEAkQDaADwAKQEvBoYAcQAwBQYAiQAwBQYACQG/AIsACQGDBpQAqQAwBZkA
yQAwBQYACAAYALIACAAcALcAKQBzACoBLgALAAIBLgATAAsBLgAbACoBLgAjADMBLgArAFwBLgAz
AFwBLgA7AFwBLgBDADMBLgBLAGIBLgBTAFwBLgBbAHkBQwBjALcASQBzACoBYwBrALcAgQB7ALcA
GwADAAEABAADAAAA7gTzAAAAOwH4AAAAbAb9AAIABQADAAIABgAFAAEABwAFAAIACAAHAASAAAAB
AAAAcxujZAAAAAAAADsAAAAEAAAAAAAAAAAAAACgAF8AAAAAAA0AAAAAAAAAAAAAAKkAnQMAAAAA
BAAAAAAAAAAAAAAAoAA+BAAAAAANAAAAAAAAAAAAAACpABQAAAAAAAAAAAABAAAAgQUAAAUAAgAA
AAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVl
X18AU1RfYTQ5MjkxYjMxMGM4NDlkNWJhMDlmMGNkODdlMzg1MmEAbXNjb3JsaWIAR2V0TWV0aG9k
AGdldF9TdGFja1RyYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBJbnZva2UAVmFyaWFi
bGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATG9hZEZpbGUAZ2V0X05hbWUA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDb21iaW5lAEdldFR5cGUARmFpbHVyZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUATWV0aG9kQmFzZQBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBhZGRfQXNzZW1ibHlSZXNvbHZlAEN1
cnJlbnREb21haW5fQXNzZW1ibHlSZXNvbHZlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcAQmluUGF0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAU1RfYTQ5MjkxYjMxMGM4NDlkNWJhMDlmMGNkODdlMzg1MmEuZGxsAGdldF9J
dGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AQXBwRG9tYWluAGdldF9DdXJy
ZW50RG9tYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAGdldF9Jbm5lckV4Y2VwdGlvbgBNZXRob2RJbmZvAEN1bHR1cmVJbmZvAHNl
bmRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFJlc29sdmVFdmVudEhhbmRsZXIARXZlbnRzT2JqZWN0
V3JhcHBlcgBGaXJlRXJyb3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYTQ5MjkxYjMxMGM4
NDlkNWJhMDlmMGNkODdlMzg1MmEuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNUX2E0OTI5MWIzMTBjODQ5ZDViYTA5ZjBjZDg3ZTM4NTJhLlByb3BlcnRpZXMA
Z2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBSZXNvbHZlRXZlbnRBcmdzAGFyZ3MAQ29udGFpbnMAU3Vj
Y2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBPYmplY3QAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AAATUABhAHQAaABUAG8AQgBpAG4AACFDAG8AbgBu
AGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAJVQBzAGUAcgAACVAAYQBzAHMAAAdLAGUAeQAACUgA
YQBzAGgAAAlQAGEAdABoAAALUQB1AGUAcgB5AAANRABvAG0AYQBpAG4AAElJAG0AcABvAHIAdABE
AGEAdABhAC4AUABlAHQAcgBvAEwAbwBnAGkAcwB0AGkAYwBzAFMAZQByAHYAaQBjAGUALgBkAGwA
bAAAbUkAbQBwAG8AcgB0AEQAYQB0AGEALgBQAGUAdAByAG8ATABvAGcAaQBzAHQAaQBjAHMAUwBl
AHIAdgBpAGMAZQAuAFAAZQB0AHIAbwBMAG8AZwBpAHMAdABpAGMAcwBTAGUAcgB2AGkAYwBlAAAV
SQBtAHAAbwByAHQARABhAHQAYQAAQUkAbQBwAG8AcgB0ACAAUABlAHQAcgBvACAATABvAGcAaQBz
AHQAaQBjAHMAIABNAG8AdgBlAG0AZQBuAHQAcwAAM0kAbQBwAG8AcgB0AEQAYQB0AGEALgBQAGUA
dAByAG8ATABvAGcAaQBzAHQAaQBjAHMAADtJAG0AcABvAHIAdABEAGEAdABhAC4AUABlAHQAcgBv
AEwAbwBnAGkAcwB0AGkAYwBzAC4AZABsAGwAACNGAGEAcwB0AE0AZQBtAGIAZQByAC4AUwBpAGcA
bgBlAGQAACtGAGEAcwB0AE0AZQBtAGIAZQByAC4AUwBpAGcAbgBlAGQALgBkAGwAbAAAH04AZQB3
AHQAbwBuAHMAbwBmAHQALgBKAHMAbwBuAAAnTgBlAHcAdABvAG4AcwBvAGYAdAAuAEoAcwBvAG4A
LgBkAGwAbAAAcVMAVABfAGEANAA5ADIAOQAxAGIAMwAxADAAYwA4ADQAOQBkADUAYgBhADAAOQBm
ADAAYwBkADgANwBlADMAOAA1ADIAYQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAAL1ntyj+DW9Kgl936XpCVYkABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0MBwkO
Dg4ODg4ODhI9BCAAEm0EIAAScQUgARJ1HAMgABwDIAAOBAAAEnkFIAIBHBgFIAEBEn0FAAIODg4F
AAESQQ4GIAESgIUOBiABEoCJDgYgAhwcHRwFIAASgJEEIAASPQggBQIIDg4OCAQgAQIOCAABEoCF
EYCZBCAAEkEGIAIBDhJBCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAIGDgMGElUDBhJZAwYS
EAIGCAMGERQHAAISQRwSSQQAABJVBAAAElkFAAEBElkEAAASEAMAAAEECAASVQQIABJZBAgAEhAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2E0
OTI5MWIzMTBjODQ5ZDViYTA5ZjBjZDg3ZTM4NTJhAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIw
MTgAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUSLk5FVCBGcmFtZXdvcmsgNC41ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADINAAAAAAAAAAAAADiNAAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAA1DQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCjZHMbAAABAKNkcxs/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEANAA5ADIAOQAxAGIAMwAxADAAYwA4ADQAOQBkADUAYgBhADAAOQBmADAAYwBkADgA
NwBlADMAOAA1ADIAYQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADAAMgA3AC4AMgA1ADcANgAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGEANAA5ADIAOQAxAGIAMwAxADAAYwA4ADQAOQBkADUAYgBhADAAOQBmADAAYwBkADgANwBl
ADMAOAA1ADIAYQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AYQA0ADkAMgA5ADEAYgAzADEAMABjADgANAA5AGQANQBiAGEAMAA5AGYAMABj
AGQAOAA3AGUAMwA4ADUAMgBhAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEANAA5ADIAOQAxAGIAMwAxADAAYwA4ADQAOQBkADUAYgBhADAAOQBmADAAYwBk
ADgANwBlADMAOAA1ADIAYQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwAwADIANwAuADIANQA3ADYAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwAwADIANwAuADIANQA3ADYAMwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAD0NAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import Records after Purge"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{cc745170-50b2-4d9b-ac66-ea54ada48126}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Records after Purge"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_46a52c39889a45f9b1641281c16ab2e3"
          VSTAMajorVersion="14"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="$Package::ConnectionString,$Package::Domain,$Package::Hash,$Package::Key,$Package::Pass,$Package::Path,$Package::PathToBin,$Package::Query,$Package::User">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a49291b310c849d5ba09f0cd87e3852a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a49291b310c849d5ba09f0cd87e3852a")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using System.IO;
using System.Reflection;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_a49291b310c849d5ba09f0cd87e3852a
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
	    protected static string BinPath;
	    public void Main()
	    {
	        // TODO: Add your code here
	        BinPath = Dts.Variables["PathToBin"].Value.ToString();
	        var connection = Dts.Variables["ConnectionString"].Value.ToString();
	        var user = Dts.Variables["User"].Value.ToString();
	        var pass = Dts.Variables["Pass"].Value.ToString();
	        var key = Dts.Variables["Key"].Value.ToString();
	        var hash = Dts.Variables["Hash"].Value.ToString();
            var path = Dts.Variables["Path"].Value.ToString();
	        var query = Dts.Variables["Query"].Value.ToString();
	        var domain = Dts.Variables["Domain"].Value.ToString();

            try
	        {
	            AppDomain.CurrentDomain.AssemblyResolve += CurrentDomain_AssemblyResolve;

	            Assembly dll = Assembly.LoadFile(Path.Combine(BinPath, "ImportData.PetroLogisticsService.dll"));
	            Type myType = dll.GetType("ImportData.PetroLogisticsService.PetroLogisticsService");

	            myType.GetMethod("ImportData")
	                .Invoke(null, new object[] { connection, user, pass, key, hash, domain, path, query });
	        }
	        catch (Exception ex)
	        {
	            Dts.Events.FireError(0, "Import Petro Logistics Movements", ex.InnerException?.InnerException?.Message ?? ex.InnerException?.Message ?? ex.Message
	                , ex.InnerException?.InnerException?.StackTrace ?? ex.InnerException?.StackTrace ?? ex.StackTrace, 0);
	        }

	        Dts.TaskResult = (int)ScriptResults.Success;
	    }

	    static Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args)
	    {
	        if (args.Name.Contains("ImportData.PetroLogistics"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "ImportData.PetroLogistics.dll"));
	        if (args.Name.Contains("FastMember.Signed"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "FastMember.Signed.dll"));
	        if (args.Name.Contains("Newtonsoft.Json"))
	            return Assembly.LoadFile(Path.Combine(BinPath, "Newtonsoft.Json.dll"));
	        return null;
	    }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_46a52c39889a45f9b1641281c16ab2e3.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{843394AE-4040-437B-826E-F13FD27727B7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a49291b310c849d5ba09f0cd87e3852a</RootNamespace>
    <AssemblyName>ST_46a52c39889a45f9b1641281c16ab2e3</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_46a52c39889a45f9b1641281c16ab2e3</msb:CodeName>
		<msb:DisplayName>ST_46a52c39889a45f9b1641281c16ab2e3</msb:DisplayName>
		<msb:ProjectId>{DE654339-E64F-402A-8AAD-D9D17C58FFA8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_46a52c39889a45f9b1641281c16ab2e3.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Settings.get_Default():ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Sett" +
    "ings")]

namespace ST_a49291b310c849d5ba09f0cd87e3852a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a49291b310c849d5ba09f0cd87e3852a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a49291b310c849d5ba09f0cd87e3852a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_46a52c39889a45f9b1641281c16ab2e3.dll">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
BgCFBGIEBgAiBWIEBgC8Ay4ABgAyAWIEBgDwBMsEBgBnAcsECgA2BeADBgCyA2IEBgDRAGIEAAAA
ACUAAAAAAAEAAQABABAAegRfADkAAQABAAAAEACbBfcFRQACAAQAAAEQADQG9wVlAAQACAADAQAA
bAYAAE0ABQALABQAuQO8ABEAbgS/ABEAVwHDABEApQDHAAYGVwDLAFaAXAbOAFaANwHOAFAgAAAA
AIYAgAQGAAEAtCIAAAAAkQB4A9IAAQA3IwAAAACGGFQFBgADAD8jAAAAAIMYVAUGAAMARyMAAAAA
kwgOBdoAAwBzIwAAAACTCD8B3wADAHojAAAAAJMISwHkAAMAgiMAAAAAlgiMBuoABACJIwAAAACG
GFQFBgAEAJEjAAAAAJEYWgXvAAQAAAABAAcFAAACAE4GAAABAF4DCQBUBQEAEQBUBQYAGQBUBQoA
KQBUBRAAMQBUBRAAOQBUBRAAQQBUBRAASQBUBRAAUQBUBRAAWQBUBRAAYQBUBRAAaQBUBQYAoQBU
BQYAwQBUBRUA0QBUBQYAcQBkBigA2QAmBi0A4QBZBDIA6QBUAzgAiQCwAzwA8QCPBEAA+QBUBUUA
8QBkA0sAAQEnAVEAgQD1AFcAgQAvAV0ACQGMAGQAGQHBAGsA2QB6BnIAeQDdBHgAeQC1ADwAeQCW
ADwAIQFKBX0A2QCYBgEAkQD+ADwAKQFTBoYAcQBUBQYAiQBUBQYACQHjAIsACQGnBpQAqQBUBZkA
yQBUBQYACAAYALIACAAcALcAKQBzACoBLgALAAIBLgATAAsBLgAbACoBLgAjADMBLgArAFwBLgAz
AFwBLgA7AFwBLgBDADMBLgBLAGIBLgBTAFwBLgBbAHkBQwBjALcASQBzACoBYwBrALcAgQB7ALcA
GwADAAEABAADAAAAEgXzAAAAXwH4AAAAkAb9AAIABQADAAIABgAFAAEABwAFAAIACAAHAASAAAAB
AAAAcxunZAAAAAAAAAEAAAAEAAAAAAAAAAAAAACgAIMAAAAAAA0AAAAAAAAAAAAAAKkAwQMAAAAA
BAAAAAAAAAAAAAAAoABiBAAAAAANAAAAAAAAAAAAAACpADgAAAAAAAAAAAABAAAApQUAAAUAAgAA
AABTVF80NmE1MmMzOTg4OWE0NWY5YjE2NDEyODFjMTZhYjJlMwA8TW9kdWxlPgBTeXN0ZW0uSU8A
TWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU1RfYTQ5MjkxYjMxMGM4NDlk
NWJhMDlmMGNkODdlMzg1MmEAbXNjb3JsaWIAR2V0TWV0aG9kAGdldF9TdGFja1RyYWNlAGRlZmF1
bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBJbnZva2UAVmFyaWFibGUAUnVudGltZVR5cGVIYW5kbGUA
R2V0VHlwZUZyb21IYW5kbGUATG9hZEZpbGUAZ2V0X05hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBDb21iaW5lAEdldFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUATWV0aG9kQmFzZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdl
dF9WYWx1ZQB2YWx1ZQBhZGRfQXNzZW1ibHlSZXNvbHZlAEN1cnJlbnREb21haW5fQXNzZW1ibHlS
ZXNvbHZlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAQmluUGF0aABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2Ny
aXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNDZhNTJj
Mzk4ODlhNDVmOWIxNjQxMjgxYzE2YWIyZTMuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291
cmNlTWFuAFNjcmlwdE1haW4AQXBwRG9tYWluAGdldF9DdXJyZW50RG9tYWluAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9Jbm5l
ckV4Y2VwdGlvbgBNZXRob2RJbmZvAEN1bHR1cmVJbmZvAHNlbmRlcgBnZXRfUmVzb3VyY2VNYW5h
Z2VyAFJlc29sdmVFdmVudEhhbmRsZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBGaXJlRXJyb3IALmN0
b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYTQ5MjkxYjMxMGM4NDlkNWJhMDlmMGNkODdlMzg1MmEu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2E0OTI5MWIz
MTBjODQ5ZDViYTA5ZjBjZDg3ZTM4NTJhLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5n
cwBSZXNvbHZlRXZlbnRBcmdzAGFyZ3MAQ29udGFpbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJl
c3VsdHMAZ2V0X0V2ZW50cwBPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAZ2V0X0Fz
c2VtYmx5AAATUABhAHQAaABUAG8AQgBpAG4AACFDAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkA
bgBnAAAJVQBzAGUAcgAACVAAYQBzAHMAAAdLAGUAeQAACUgAYQBzAGgAAAlQAGEAdABoAAALUQB1
AGUAcgB5AAANRABvAG0AYQBpAG4AAElJAG0AcABvAHIAdABEAGEAdABhAC4AUABlAHQAcgBvAEwA
bwBnAGkAcwB0AGkAYwBzAFMAZQByAHYAaQBjAGUALgBkAGwAbAAAbUkAbQBwAG8AcgB0AEQAYQB0
AGEALgBQAGUAdAByAG8ATABvAGcAaQBzAHQAaQBjAHMAUwBlAHIAdgBpAGMAZQAuAFAAZQB0AHIA
bwBMAG8AZwBpAHMAdABpAGMAcwBTAGUAcgB2AGkAYwBlAAAVSQBtAHAAbwByAHQARABhAHQAYQAA
QUkAbQBwAG8AcgB0ACAAUABlAHQAcgBvACAATABvAGcAaQBzAHQAaQBjAHMAIABNAG8AdgBlAG0A
ZQBuAHQAcwAAM0kAbQBwAG8AcgB0AEQAYQB0AGEALgBQAGUAdAByAG8ATABvAGcAaQBzAHQAaQBj
AHMAADtJAG0AcABvAHIAdABEAGEAdABhAC4AUABlAHQAcgBvAEwAbwBnAGkAcwB0AGkAYwBzAC4A
ZABsAGwAACNGAGEAcwB0AE0AZQBtAGIAZQByAC4AUwBpAGcAbgBlAGQAACtGAGEAcwB0AE0AZQBt
AGIAZQByAC4AUwBpAGcAbgBlAGQALgBkAGwAbAAAH04AZQB3AHQAbwBuAHMAbwBmAHQALgBKAHMA
bwBuAAAnTgBlAHcAdABvAG4AcwBvAGYAdAAuAEoAcwBvAG4ALgBkAGwAbAAAcVMAVABfAGEANAA5
ADIAOQAxAGIAMwAxADAAYwA4ADQAOQBkADUAYgBhADAAOQBmADAAYwBkADgANwBlADMAOAA1ADIA
YQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAETLqHhLPR9Ir7Fr
NE4oOR8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0MBwkODg4ODg4ODhI9BCAAEm0EIAAScQUg
ARJ1HAMgABwDIAAOBAAAEnkFIAIBHBgFIAEBEn0FAAIODg4FAAESQQ4GIAESgIUOBiABEoCJDgYg
AhwcHRwFIAASgJEEIAASPQggBQIIDg4OCAQgAQIOCAABEoCFEYCZBCAAEkEGIAIBDhJBCLd6XFYZ
NOCJCImEXc2AgMyRBAAAAAAEAQAAAAIGDgMGElUDBhJZAwYSEAIGCAMGERQHAAISQRwSSQQAABJV
BAAAElkFAAEBElkEAAASEAMAAAEECAASVQQIABJZBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2E0OTI5MWIzMTBjODQ5ZDViYTA5ZjBj
ZDg3ZTM4NTJhAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTgAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAADsNAAAAAAAAAAAAAAGNQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+DQA
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQCnZHMbAAABAKdkcxs/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGEANAA5ADIAOQAxAGIAMwAxADAAYwA4ADQAOQBkADUAYgBhADAAOQBmADAAYwBkADgA
NwBlADMAOAA1ADIAYQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADAAMgA3AC4AMgA1ADcANgA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADQANgBhADUAMgBjADMAOQA4ADgAOQBhADQANQBmADkAYgAxADYANAAxADIAOAAxAGMAMQA2
AGEAYgAyAGUAMwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8ANAA2AGEANQAyAGMAMwA5ADgAOAA5AGEANAA1AGYAOQBiADEANgA0ADEAMgA4
ADEAYwAxADYAYQBiADIAZQAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGEANAA5ADIAOQAxAGIAMwAxADAAYwA4ADQAOQBkADUAYgBhADAAOQBmADAAYwBk
ADgANwBlADMAOAA1ADIAYQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwAwADIANwAuADIANQA3ADYANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwAwADIANwAuADIANQA3ADYANwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAYNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Purge Records"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Purge Records"
      DTS:DTSID="{5FEA2C38-1366-4375-B65F-A7543F4C456B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Purge Records"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F3D02183-6ACA-4FF4-9C92-25DB4A603633}"
          SQLTask:SqlStatementSource="Delete from dbo.Movement" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{FFC1F544-FC3C-49CC-A070-A12FCA85F59D}"
      DTS:EvalOp="1"
      DTS:Expression="@[$Package::Purge]==1"
      DTS:From="Package\Data Flow Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Purge Records" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{C59AB2AA-70A9-4677-B1CF-2E6B19ECB359}"
      DTS:From="Package\Purge Records"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Import Records after Purge" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{C300A2DD-DEAB-4B4B-A6D8-4A34913F7082}"
      DTS:EvalOp="1"
      DTS:Expression="@[$Package::Purge]==0"
      DTS:From="Package\Data Flow Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Import Records" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="153,42"
          Id="Package\Data Flow Task"
          TopLeft="207,36" />
        <NodeLayout
          Size="154,42"
          Id="Package\Import Records"
          TopLeft="524,218" />
        <NodeLayout
          Size="210,42"
          Id="Package\Import Records after Purge"
          TopLeft="107,235" />
        <NodeLayout
          Size="165,42"
          Id="Package\Purge Records"
          TopLeft="42,120" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="259.333333333333,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-134.833333333333,42"
              Start="0,0"
              End="-134.833333333333,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.0608020698577" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.0608020698577"
                    Point2="0,17.0608020698577"
                    Point3="-4,17.0608020698577" />
                  <mssgle:LineSegment
                    End="-130.833333333333,17.0608020698577" />
                  <mssgle:CubicBezierSegment
                    Point1="-130.833333333333,17.0608020698577"
                    Point2="-134.833333333333,17.0608020698577"
                    Point3="-134.833333333333,21.0608020698577" />
                  <mssgle:LineSegment
                    End="-134.833333333333,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-75.4166666666667,22.0608020698577,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="124.5,162">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="87.5,73"
              Start="0,0"
              End="87.5,65.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.5"
                    Point2="0,36.5"
                    Point3="4,36.5" />
                  <mssgle:LineSegment
                    End="83.5,36.5" />
                  <mssgle:CubicBezierSegment
                    Point1="83.5,36.5"
                    Point2="87.5,36.5"
                    Point3="87.5,40.5" />
                  <mssgle:LineSegment
                    End="87.5,65.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="307.666666666667,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="293.333333333333,140"
              Start="0,0"
              End="293.333333333333,132.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.869340232859" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.869340232859"
                    Point2="0,56.869340232859"
                    Point3="4,56.869340232859" />
                  <mssgle:LineSegment
                    End="289.333333333333,56.869340232859" />
                  <mssgle:CubicBezierSegment
                    Point1="289.333333333333,56.869340232859"
                    Point2="293.333333333333,56.869340232859"
                    Point3="293.333333333333,60.869340232859" />
                  <mssgle:LineSegment
                    End="293.333333333333,132.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="138.666666666667,61.869340232859,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>